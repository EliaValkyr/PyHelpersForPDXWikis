import json
import re
from functools import cached_property

from PyHelpersForPDXWikis.localsettings import MILLENNIADIR
from common.file_generator import FileGenerator
from common.paradox_lib import Game


class Millennia(Game):
    """Never construct this object manually. Use the variable millenniagame instead.
    This way all data can be cached without having to pass on references to the game or the parser"""
    name = 'Millennia'
    short_game_name = 'millennia'
    game_path = MILLENNIADIR
    launcher_settings = game_path / 'launcher/launcher-settings.json'
    wiki_domain = 'millennia.paradoxwikis.com'

    @cached_property
    def parser(self):
        """returns the shared MillenniaParser"""

        # the import has to be inside this method to allow indirect circular dependencies if an entity which is
        # generated by the parser needs to call a method from the parser
        from millennia.parser import MillenniaParser
        return MillenniaParser()

    @cached_property
    def version(self):
        """The version string from the launcher setttings"""
        json_object = json.load(open(self.launcher_settings, encoding='utf-8'))
        return json_object['version']

    @cached_property
    def full_version(self):
        return self.version


millenniagame = Millennia()


class MillenniaFileGenerator(FileGenerator):

    def __init__(self):
        super().__init__(millenniagame)

    @cached_property
    def parser(self):
        """returns the shared MillenniaParser"""

        # the import has to be inside this method to allow indirect circular dependencies if an entity which is
        # generated by the parser needs to call a method from the parser
        from millennia.parser import MillenniaParser
        return MillenniaParser()
